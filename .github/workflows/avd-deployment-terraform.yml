name: 'Terraform AVD deployment'
 
on:
  # Triggers the workflow when a commit is pushed to the main branch
  push:
    branches:
    - main
    paths:
    - avd-terraform-deployment/**
    - .github/workflows/avd-deployment-terraform.yml
  pull_request:
  # Triggers the workflow if the AIB image builder has completed, so AVD can be deployed with Terraform using the latest version of the custom image
  # workflow_run:
  #   workflows: ["Image Builder"]
  #   types:
  #     - completed

jobs:
  terraform:
    name: 'Terraform'
    # Using a service principal to access Azure
    env:
      # Variables used in GitHub Actions workflow
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_AVD_DEPLOYMENT }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET_AVD_DEPLOYMENT }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID_LANDINGZONE }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: test
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest 
    defaults:
      run:
        shell: bash
 
    steps:
    # Checkout the repository to the GitHub Actions runner 
    - name: Checkout
      uses: actions/checkout@v2
         
    - name: Terraform Init
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./avd-terraform-deployment"
  
    - name: Terraform Format
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'fmt'
        tf_actions_working_dir: "./avd-terraform-deployment"
        args: '-check'

    - name: Terraform Validate
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./avd-terraform-deployment"
    
    - name: Terraform Plan
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./avd-terraform-deployment"
        tf_actions_comment: true
        args: '-var="local_admin_password=${{ secrets.AVD_LOCAL_USER_PASSWORD }}" -var="domain_password=${{ secrets.AVD_LOCAL_USER_PASSWORD }}" -var="IDENTITY_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID_IDENTITY }}" -var="CONNECTIVITY_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID_CONNECTIVITY }}" -var="LANDING_ZONE_COLLABORATION_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID_COLLABORATION }}"'
 
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./avd-terraform-deployment"
        # args: '-var="local_admin_password=${{ secrets.AVD_LOCAL_USER_PASSWORD }}" -var="domain_password=${{ secrets.AVD_LOCAL_USER_PASSWORD }}"'
        args: '-var="local_admin_password=${{ secrets.AVD_LOCAL_USER_PASSWORD }}" -var="domain_password=${{ secrets.AVD_LOCAL_USER_PASSWORD }}" -var="IDENTITY_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID_IDENTITY }}" -var="CONNECTIVITY_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID_CONNECTIVITY }}" -var="LANDING_ZONE_COLLABORATION_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID_COLLABORATION }}"'